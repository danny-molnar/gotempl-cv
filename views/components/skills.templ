package components

import (
	"github.com/riweston/gotempl-cv/pkgs/types"
)

func NewSkills(filePath string) templ.Component {
	skills := &types.SkillData{}
	err := types.ReadYamlFile(filePath, skills)
	if err != nil {
		panic(err)
	}
	return SkillsCard(*skills)
}

templ SkillsCard(skillsData types.SkillData) {
	@Card(Skills(skillsData))
}

templ Skills(skillsData types.SkillData) {
	<div class="mb-4">
		<h1>Skills</h1>
		<h2>I already know</h2>
	</div>
	<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
		for _, skill := range skillsData.Skills {
			@NewSkill(skill)
		}
		// Add empty div to fill the gap
		for i := 0; i < 4-len(skillsData.Skills)%4; i++ {
			<div class="sm:flex-grow"></div>
		}
	</div>
	<div class="mb-4">
		<h2>I'm learning</h2>
	</div>
	<div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
		for _, skill := range skillsData.SkillsLearning {
			@NewSkillLearning(skill)
		}
	</div>
}

templ NewSkill(skill types.Skill) {
	<div class="flex flex-col mb-4">
		<!-- Logo and name -->
		@NewSkillIcon(skill)
		<!-- Level boxes -->
		<div class="flex items-center mt-3">
			<div class="flex space-x-1">
				for i := 0; i < skill.Level; i++ {
					<div class="w-6 h-2 bg-blue-900 rounded-[2px]"></div>
				}
				for i := skill.Level; i < 5; i++ {
					<div class="w-6 h-2 bg-gray-200 rounded-[2px]"></div>
				}
			</div>
		</div>
	</div>
}

templ NewSkillIcon(skill types.Skill) {
	<div class="flex items-center">
		@NewLogo(func(opts *LogoOpts) {
			opts.Logo = skill.IconifyID
			opts.Width = "32"
			opts.Height = "32"
			opts.Alt = skill.DisplayName
		})
		<span class="ml-2 text-sm font-semibold text-gray-500">{ skill.DisplayName }</span>
	</div>
}

templ NewSkillLearning(skill types.SkillLearning) {
	<div class="flex flex-col mb-4 mr-14">
		<!-- Logo and name -->
		<div class="flex items-center">
			@NewLogo(func(opts *LogoOpts) {
				opts.Logo = skill.IconifyID
				opts.Width = "32"
				opts.Height = "32"
				opts.Alt = skill.DisplayName
			})
			<span class="ml-2 text-sm font-semibold text-gray-500">{ skill.DisplayName }</span>
		</div>
	</div>
}
